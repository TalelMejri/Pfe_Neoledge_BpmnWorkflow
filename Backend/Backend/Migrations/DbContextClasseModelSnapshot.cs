// <auto-generated />
using Backend.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(DbContextClasse))]
    partial class DbContextClasseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Backend.Models.Changes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Change")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiagrammeId")
                        .HasColumnType("int");

                    b.Property<string>("IdElement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DiagrammeId");

                    b.ToTable("Changes");
                });

            modelBuilder.Entity("Backend.Models.DateHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Annee")
                        .HasColumnType("int");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<int>("DiagrammeId")
                        .HasColumnType("int");

                    b.Property<string>("Heure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DiagrammeId")
                        .IsUnique();

                    b.ToTable("DateHistories");
                });

            modelBuilder.Entity("Backend.Models.Diagramme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodeXml")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HistoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HistoryId");

                    b.ToTable("Diagrammes");
                });

            modelBuilder.Entity("Backend.Models.History", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProcessusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProcessusId")
                        .IsUnique();

                    b.ToTable("Histories");
                });

            modelBuilder.Entity("Backend.Models.Processus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodeXml")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Processus ");
                });

            modelBuilder.Entity("Backend.Models.Changes", b =>
                {
                    b.HasOne("Backend.Models.Diagramme", "Diagramme")
                        .WithMany("Changes")
                        .HasForeignKey("DiagrammeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Diagramme");
                });

            modelBuilder.Entity("Backend.Models.DateHistory", b =>
                {
                    b.HasOne("Backend.Models.Diagramme", "Diagramme")
                        .WithOne("DateHistory")
                        .HasForeignKey("Backend.Models.DateHistory", "DiagrammeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Diagramme");
                });

            modelBuilder.Entity("Backend.Models.Diagramme", b =>
                {
                    b.HasOne("Backend.Models.History", "History")
                        .WithMany("Diagrammes")
                        .HasForeignKey("HistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("History");
                });

            modelBuilder.Entity("Backend.Models.History", b =>
                {
                    b.HasOne("Backend.Models.Processus", "Processus")
                        .WithOne("History")
                        .HasForeignKey("Backend.Models.History", "ProcessusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Processus");
                });

            modelBuilder.Entity("Backend.Models.Diagramme", b =>
                {
                    b.Navigation("Changes");

                    b.Navigation("DateHistory")
                        .IsRequired();
                });

            modelBuilder.Entity("Backend.Models.History", b =>
                {
                    b.Navigation("Diagrammes");
                });

            modelBuilder.Entity("Backend.Models.Processus", b =>
                {
                    b.Navigation("History");
                });
#pragma warning restore 612, 618
        }
    }
}
